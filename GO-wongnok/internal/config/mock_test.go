// Code generated by mockery v2.53.4. DO NOT EDIT.

package config_test

import (
	context "context"

	oidc "github.com/coreos/go-oidc"
	mock "github.com/stretchr/testify/mock"
)

// MockIOIDCTokenVerifier is an autogenerated mock type for the IOIDCTokenVerifier type
type MockIOIDCTokenVerifier struct {
	mock.Mock
}

type MockIOIDCTokenVerifier_Expecter struct {
	mock *mock.Mock
}

func (_m *MockIOIDCTokenVerifier) EXPECT() *MockIOIDCTokenVerifier_Expecter {
	return &MockIOIDCTokenVerifier_Expecter{mock: &_m.Mock}
}

// Verify provides a mock function with given fields: ctx, rawIDToken
func (_m *MockIOIDCTokenVerifier) Verify(ctx context.Context, rawIDToken string) (*oidc.IDToken, error) {
	ret := _m.Called(ctx, rawIDToken)

	if len(ret) == 0 {
		panic("no return value specified for Verify")
	}

	var r0 *oidc.IDToken
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (*oidc.IDToken, error)); ok {
		return rf(ctx, rawIDToken)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) *oidc.IDToken); ok {
		r0 = rf(ctx, rawIDToken)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*oidc.IDToken)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, rawIDToken)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockIOIDCTokenVerifier_Verify_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Verify'
type MockIOIDCTokenVerifier_Verify_Call struct {
	*mock.Call
}

// Verify is a helper method to define mock.On call
//   - ctx context.Context
//   - rawIDToken string
func (_e *MockIOIDCTokenVerifier_Expecter) Verify(ctx interface{}, rawIDToken interface{}) *MockIOIDCTokenVerifier_Verify_Call {
	return &MockIOIDCTokenVerifier_Verify_Call{Call: _e.mock.On("Verify", ctx, rawIDToken)}
}

func (_c *MockIOIDCTokenVerifier_Verify_Call) Run(run func(ctx context.Context, rawIDToken string)) *MockIOIDCTokenVerifier_Verify_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *MockIOIDCTokenVerifier_Verify_Call) Return(_a0 *oidc.IDToken, _a1 error) *MockIOIDCTokenVerifier_Verify_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockIOIDCTokenVerifier_Verify_Call) RunAndReturn(run func(context.Context, string) (*oidc.IDToken, error)) *MockIOIDCTokenVerifier_Verify_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockIOIDCTokenVerifier creates a new instance of MockIOIDCTokenVerifier. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockIOIDCTokenVerifier(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockIOIDCTokenVerifier {
	mock := &MockIOIDCTokenVerifier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
